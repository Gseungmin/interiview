concept_interview_first = [
    {
        "input": "인덱스",
        "answer": "인덱스의 개념에 대해 설명해주세요"
    },
]

concept_interview_second = [
    {
        "input": "인덱스는 B-트리 형태의 자료구조로 데이터베이스 조회 성능을 높이기 위한 자료구조입니다.",
        "answer": "인덱스는 어떻게 조회 성능을 높이나요?"
    },
    {
        "input": "인덱스는 페이지 분할과 병합과정을 거치면서 균형잡힌 트리형태를 유지합니다. 따라서 조회 성능은 좋아질 수 있지만 페이지 분할 및 병합과정에서 발생할 수 있는 오버헤드를 고려하여"
                 " 인덱스 설계를 진행해야 합니다",
        "answer": "좋은 인덱스 설계가 무엇일까요?"
    }
]

concept_interview_summary = [
    {
        "input": "CGLIB 동적 프록시 기술은 클래스를 상속받아 프록시 객체를 생성하고, JDK 동적 프록시는 클래스의 상위 인터페이스의 구현체를 만들어냅니다. "
                 "따라서 스프링부트는 CGLIB 동적 프록시를 기본으로 합니다. 그 이유는 JDK 동적 프록시의 경우 상위 인터페이스가 항상 존재해야하는데, "
                 "프로젝트라는게 모든 클래스에 상위 인터페이스가 필요한 것은 아니기에 관리 측면에서 CGLIB 동적 프록시가 장점을 가집니다",
        "answer": "스프링 AOP의 프록시 선택 로직과 기본 CGLIB 사용 방식을 명확히 이해했으나, CGLIB의 Enhancer와 ASM 기반 런타임 바이트코드 조작 등 내부 동작 원리에 대한 구체적 설명이 부족합니다."
    },
]

problem_interview_first = [
    {
        "input": "데이터베이스",
        "answer": "단일 DB 서버만 운영할 때 발생할 수 있는 문제를 어떻게 해결하시겠습니까?"
    },
    {
        "input": "인덱스",
        "answer": "주문 이력을 날짜 범위로 조회할 때 성능 저하를 발견했다면, 어떤 최적화 전략을 적용하시겠습니까?"
    }
]

problem_interview_second = [
    {
        "input": "먼저 쓰기 작업과 읽기 작업중 어떤 작업이 많은지 확인해봐야 할 것 같습니다. 읽기 작업이 많다면 캐시나 인덱스 페이지네이션 등을 적용할 수 있습니다"
                 "만약 쓰기 작업이 많다면 인덱스를 생성할 때 설게가 잘되어 있는지 확인해봐야 할 것 같습니다.",
        "answer": "인덱스 설계가 잘되어 있다는 것이 어떤 의미이죠?"
    },
    {
        "input": "인덱스는 B 트리 자료구조로 페이지 분할과 병합을 통해 균형잡힌 트리 형태를 가집니다. 즉 페이지 분할과 병합은 필수적인 조건인데, 이를 최소화 하는 것이 중요합니다."
                 "따라서 인덱스를 단조롭게 증가하게 설계할 경우 페이지 병합이 발생하지 않으며, 페이지 분할도 끝 부분에서만 발생하므로 성능 부하가 적습니다."
                 "또한 인덱스는 업데이트가 되지 않도록 설계하는게 중요한데, 이는 업데이트시 페이지 병합과 페이지 분할이 둘다 발생할 수 있기 때문입니다.",
        "answer": "그렇다면 왜 인덱스는 B 트리를 구현체로 사용하는지 말해주세요"
    }
]

problem_interview_summary = [
    {
        "input": "먼저 쓰기 작업과 읽기 작업중 어떤 작업이 많은지 확인해봐야 할 것 같습니다. 읽기 작업이 많다면 캐시나 인덱스 페이지네이션 등을 적용할 수 있습니다"
                 "만약 쓰기 작업이 많다면 인덱스를 생성할 때 설게가 잘되어 있는지 확인해봐야 할 것 같습니다.",
        "answer": "데이터베이스 인덱스의 페이지 분할 시 성능 저하 인지는 정확하지만, 클러스터링 환경에서 일관성을 고려하는 개념이 부족합니다."
    },
]